local BakaLib = {}

local tweenService = game:GetService("TweenService")
local uis = game:GetService("UserInputService")

function BakaLib:validate(defaluts, options)
	for i, v in pairs(defaluts) do
		if options[i] == nil then
			options[i] = v
		end
	end
	return options
end

function BakaLib:tween(object, goal,tweenInfo, callback)
	local tween = tweenService:Create(object, tweenInfo, goal)
	tween.Completed:Connect(callback or function() end)
	tween:Play()
end

function BakaLib:init(options)
	options = BakaLib:validate({
		name = "Label"
	}, options or {})
	
	--//render
	
	local GUI = {
		CurrentTab = nil
	}
	
	do
		GUI["1"] = Instance.new("ScreenGui", game:GetService("RunService"):IsStudio() and game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui") or game.CoreGui);
		GUI["1"]["Name"] = [[BakaLib]];
		GUI["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
		GUI["1"]["ResetOnSpawn"] = false;


		-- StarterGui.BakaLib.MainFrame
		GUI["2"] = Instance.new("Frame", GUI["1"]);
		GUI["2"]["BorderSizePixel"] = 0;
		GUI["2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["2"]["Size"] = UDim2.new(1, 0, 1, 0);
		GUI["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		GUI["2"]["Name"] = [[MainFrame]];
		GUI["2"]["BackgroundTransparency"] = 1;


		-- StarterGui.BakaLib.MainFrame.CloseOpenButton
		GUI["3"] = Instance.new("ImageButton", GUI["2"]);
		GUI["3"]["BorderSizePixel"] = 0;
		GUI["3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["3"]["Image"] = [[rbxassetid://18744064404]];
		GUI["3"]["Size"] = UDim2.new(0.04324, 0, 0.08921, 0);
		GUI["3"]["Name"] = [[CloseOpenButton]];
		GUI["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		GUI["3"]["Position"] = UDim2.new(0.00907, 0, 0.86763, 0);


		-- StarterGui.BakaLib.MainFrame.CloseOpenButton.UICorner
		GUI["4"] = Instance.new("UICorner", GUI["3"]);



		-- StarterGui.BakaLib.MainFrame.CloseOpenButton.LocalScript
		GUI["5"] = Instance.new("LocalScript", GUI["3"]);
		




		-- StarterGui.BakaLib.MainFrame.CloseOpenButton.UIAspectRatioConstraint
		GUI["6"] = Instance.new("UIAspectRatioConstraint", GUI["3"]);



		-- StarterGui.BakaLib.MainFrame.Hub
		GUI["7"] = Instance.new("Frame", GUI["2"]);
		GUI["7"]["BorderSizePixel"] = 0;
		GUI["7"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
		GUI["7"]["Position"] = UDim2.new(1,1,1,1);
		GUI["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		GUI["7"]["Name"] = [[Hub]];
		GUI["7"]["BackgroundTransparency"] = 0.5;
		GUI["7"].Size = UDim2.new(0.3159, 0, 0.49928, 0)
		
		


		-- StarterGui.BakaLib.MainFrame.Hub.UICorner
		GUI["8"] = Instance.new("UICorner", GUI["7"]);



		-- StarterGui.BakaLib.MainFrame.Hub.Visual
		GUI["9"] = Instance.new("Folder", GUI["7"]);
		GUI["9"]["Name"] = [[Visual]];


		-- StarterGui.BakaLib.MainFrame.Hub.Visual.DropShadowHolder
		GUI["a"] = Instance.new("Frame", GUI["9"]);
		GUI["a"]["ZIndex"] = 0;
		GUI["a"]["BorderSizePixel"] = 0;
		GUI["a"]["Size"] = UDim2.new(1, 0, 1, 0);
		GUI["a"]["Name"] = [[DropShadowHolder]];
		GUI["a"]["BackgroundTransparency"] = 1;


		-- StarterGui.BakaLib.MainFrame.Hub.Visual.DropShadowHolder.DropShadow
		GUI["b"] = Instance.new("ImageLabel", GUI["a"]);
		GUI["b"]["ZIndex"] = 0;
		GUI["b"]["BorderSizePixel"] = 0;
		GUI["b"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
		GUI["b"]["ScaleType"] = Enum.ScaleType.Slice;
		GUI["b"]["ImageTransparency"] = 0.5;
		GUI["b"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
		GUI["b"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
		GUI["b"]["Image"] = [[rbxassetid://6014261993]];
		GUI["b"]["Size"] = UDim2.new(1, 47, 1, 47);
		GUI["b"]["BackgroundTransparency"] = 1;
		GUI["b"]["Name"] = [[DropShadow]];
		GUI["b"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);


		-- StarterGui.BakaLib.MainFrame.Hub.Visual.Line
		GUI["c"] = Instance.new("Frame", GUI["9"]);
		GUI["c"]["BorderSizePixel"] = 0;
		GUI["c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["c"]["Size"] = UDim2.new(1, 0, 0.00388, 0);
		GUI["c"]["Position"] = UDim2.new(0, 0, 0.12104, 0);
		GUI["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		GUI["c"]["Name"] = [[Line]];


		-- StarterGui.BakaLib.MainFrame.Hub.Visual.Tilte
		GUI["d"] = Instance.new("TextLabel", GUI["9"]);
		GUI["d"]["TextWrapped"] = true;
		GUI["d"]["BorderSizePixel"] = 0;
		GUI["d"]["TextXAlignment"] = Enum.TextXAlignment.Left;
		GUI["d"]["TextScaled"] = true;
		GUI["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["d"]["TextSize"] = 14;
		GUI["d"]["Text"] = options.name
		GUI["d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
		GUI["d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["d"]["BackgroundTransparency"] = 1;
		GUI["d"]["Size"] = UDim2.new(0.98455, 0, 0.05476, 0);
		GUI["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		GUI["d"]["Name"] = [[Tilte]];
		GUI["d"]["Position"] = UDim2.new(0.01545, 0, 0.04035, 0);


		-- StarterGui.BakaLib.MainFrame.Hub.Visual.ImageLabel
		GUI["e"] = Instance.new("ImageLabel", GUI["9"]);
		GUI["e"]["BorderSizePixel"] = 0;
		GUI["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["e"]["Image"] = [[rbxassetid://10747384394]];
		GUI["e"]["Size"] = UDim2.new(0, 25, 0, 38);
		GUI["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		GUI["e"]["BackgroundTransparency"] = 1;
		GUI["e"]["Position"] = UDim2.new(0.92053, 0, 0.0317, 0);


		-- StarterGui.BakaLib.MainFrame.Hub.Visual.ImageLabel.UIAspectRatioConstraint
		GUI["f"] = Instance.new("UIAspectRatioConstraint", GUI["e"]);
		
		GUI["10"] = Instance.new("Folder", GUI["7"]);
		GUI["10"]["Name"] = [[MainFunction]];


			-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.GUIHolder
			GUI["11"] = Instance.new("ScrollingFrame", GUI["10"]);
			GUI["11"]["ScrollingDirection"] = Enum.ScrollingDirection.X;
			GUI["11"]["BorderSizePixel"] = 0;
			GUI["11"]["CanvasSize"] = UDim2.new(3, 0, 2, 0);
			GUI["11"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			GUI["11"]["Name"] = [[TabHolder]];
			GUI["11"]["Selectable"] = false;
			GUI["11"]["Size"] = UDim2.new(0.96026, 0, 0, 27);
			GUI["11"]["Position"] = UDim2.new(0.01545, 0, 0.14986, 0);
			GUI["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			GUI["11"]["ScrollBarThickness"] = 0;
			GUI["11"]["BackgroundTransparency"] = 1;


			-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.GUIHolder.UIListLayout
			GUI["12"] = Instance.new("UIListLayout", GUI["11"]);
			GUI["12"]["Padding"] = UDim.new(0, 5);
			GUI["12"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
			GUI["12"]["FillDirection"] = Enum.FillDirection.Horizontal;
		BakaLib:tween(GUI["7"],{Position = UDim2.new(0.3417, 0, 0.28345, 0)},TweenInfo.new(1,Enum.EasingStyle.Sine,Enum.EasingDirection.Out))
		local isopen = true
			GUI["3"].MouseButton1Click:Connect(function()
			
			isopen = not isopen
			if isopen then
				
				BakaLib:tween(GUI["7"],{Position = UDim2.new(1,1,1,1)},TweenInfo.new(1,Enum.EasingStyle.Sine,Enum.EasingDirection.In))
			else
				
				BakaLib:tween(GUI["7"],{Position = UDim2.new(0.3417, 0, 0.28345, 0)},TweenInfo.new(1,Enum.EasingStyle.Sine,Enum.EasingDirection.Out))
			end
		end)
	end
	
	function GUI:Tab(options)
		options = BakaLib:validate({
			name = "Tab"
		}, options or {})
		
		local Tab = {
			Hover = false,
			Active = false
		}
		
		--// Render
		do



			-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.TabHolder.Taboff
			Tab["13"] = Instance.new("Frame", GUI["11"]);
			Tab["13"]["BorderSizePixel"] = 0;
			Tab["13"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			Tab["13"]["Size"] = UDim2.new(0, 129, 0, 27);
			Tab["13"]["Position"] = UDim2.new(0.0287, 0, 0, 0);
			Tab["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			Tab["13"]["Name"] = [[Taboff]];
			Tab["13"]["BackgroundTransparency"] = 0.9;
			
			Tab["5555"] = Instance.new("TextButton", Tab["13"]);
			Tab["5555"]["BackgroundTransparency"] = 1
			Tab["5555"]["Size"] = UDim2.fromScale(1,1)
			Tab["5555"]["TextTransparency"] = 1
			-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.TabHolder.Taboff.UICorner
			Tab["14"] = Instance.new("UICorner", Tab["13"]);



			-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.TabHolder.Taboff.TextLabel
			Tab["15"] = Instance.new("TextLabel", Tab["13"]);
			Tab["15"]["TextWrapped"] = true;
			Tab["15"]["BorderSizePixel"] = 0;
			Tab["15"]["TextScaled"] = true;
			Tab["15"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			Tab["15"]["TextSize"] = 14;
			Tab["15"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
			Tab["15"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
			Tab["15"]["BackgroundTransparency"] = 1;
			Tab["15"]["Size"] = UDim2.new(1, 0, 0.6, 0);
			Tab["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			Tab["15"]["Text"] = options.name;
			Tab["15"]["Position"] = UDim2.new(0, 0, 0.2, 0);
			
			Tab["19"] = Instance.new("ScrollingFrame", GUI["10"]);
			Tab["19"]["BorderSizePixel"] = 0;
			Tab["19"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			Tab["19"]["Name"] = [[PageHolder]];
			Tab["19"]["ScrollBarImageTransparency"] = 0.5;
			Tab["19"]["Selectable"] = false;
			Tab["19"]["VerticalScrollBarPosition"] = Enum.VerticalScrollBarPosition.Left;
			Tab["19"]["Size"] = UDim2.new(0.97, 0, 0.7164, 0);
			Tab["19"]["Position"] = UDim2.new(0.015, 0, 0.2686, 0);
			Tab["19"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
			Tab["19"]["ScrollBarThickness"] = 0;
			Tab["19"]["BackgroundTransparency"] = 1;
			Tab["19"]["Visible"] = false
			
			Tab["1e"] = Instance.new("UIListLayout", Tab["19"]);
			Tab["1e"]["Padding"] = UDim.new(0, 5);
			Tab["1e"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
			
		end
		--//Logic
		do

			
			function Tab:Activate()
				if not Tab.Active then
					if GUI.CurrentTab ~= nil then
						GUI.CurrentTab:Deactivate()
					end
					Tab.Active = true
					BakaLib:tween(Tab["13"],{BackgroundTransparency = 0.8},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
					Tab["19"]["Visible"] = true
					GUI.CurrentTab = Tab
				end
				
			end
			
			function Tab:Deactivate()
				if Tab.Active then
					Tab.Active = false
					Tab.Hover = false
					BakaLib:tween(Tab["13"],{BackgroundTransparency = 0.9},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
					Tab["19"]["Visible"] = false
				end
			end
			
			Tab["13"].MouseEnter:Connect(function()
				Tab.Hover = true
				if not Tab.Active then
					BakaLib:tween(Tab["13"],{BackgroundTransparency = 0.85},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
				end
			end)
			Tab["13"].MouseLeave:Connect(function()
				Tab.Hover = false
				if not Tab.Active then
					BakaLib:tween(Tab["13"],{BackgroundTransparency = 0.9},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
				end
			end)

			Tab["5555"].MouseButton1Click:Connect(function()
				Tab:Activate()
			end)
			
			if GUI.CurrentTab == nil then
				Tab:Activate()
			end
		end
		
		function Tab:AddButton(options)
			options = BakaLib:validate({
				name = "Button",
				callback = function() end
			}, options or {})
			
			local Button = {}
			
			do
				Button["1a"] = Instance.new("Frame", Tab["19"]);
				Button["1a"]["BorderSizePixel"] = 0;
				Button["1a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				Button["1a"]["Size"] = UDim2.new(1, 0, 0.05, 0);
				Button["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				Button["1a"]["Name"] = [[Button]];
				Button["1a"]["BackgroundTransparency"] = 0.9;
				
				Button["5555"] = Instance.new("TextButton", Button["19"]);
				Button["5555"]["BackgroundTransparency"] = 1
				Button["5555"]["Size"] = UDim2.fromScale(1,1)
				Button["5555"]["TextTransparency"] = 1


				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.Button.UICorner
				Button["1b"] = Instance.new("UICorner", Button["1a"]);



				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.Button.ButtonName
				Button["1c"] = Instance.new("TextLabel", Button["1a"]);
				Button["1c"]["TextWrapped"] = true;
				Button["1c"]["BorderSizePixel"] = 0;
				Button["1c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
				Button["1c"]["TextScaled"] = true;
				Button["1c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				Button["1c"]["TextSize"] = 14;
				Button["1c"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
				Button["1c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				Button["1c"]["BackgroundTransparency"] = 1;
				Button["1c"]["Size"] = UDim2.new(1, 0, 0.5, 0);
				Button["1c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				Button["1c"]["Text"] = options.name;
				Button["1c"]["Name"] = [[ButtonName]];
				Button["1c"]["Position"] = UDim2.new(0, 0, 0.25, 0);


				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.Button.ButtonName.UIPadding
				Button["1d"] = Instance.new("UIPadding", Button["1c"]);
				Button["1d"]["PaddingLeft"] = UDim.new(0, 5);
			end
			--//Logic
			do
				Button["1a"].MouseEnter:Connect(function()
					BakaLib:tween(Button["1a"],{BackgroundTransparency = 0.8},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
				end)
				
				Button["1a"].MouseLeave:Connect(function()
					BakaLib:tween(Button["1a"],{BackgroundTransparency = 0.9},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
				end)
				
				Button["1a"].InputBegan:Connect(function(i,g)
					if g then return end
					
					if i.UserInputType == Enum.UserInputType.MouseButton1 then
						BakaLib:tween(Button["1a"],{BackgroundTransparency = 0.7},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
					end
				end)
				
				Button["5555"].MouseButton1Click:Connect(function()
						options.callback()
						BakaLib:tween(Button["1a"],{BackgroundTransparency = 0.9},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
				end)
			end
			return Button
			
			
		end
		
		function Tab:AddToggle(options)
			options = BakaLib:validate({
				name = "Toggle :)",
				callback = function() end
			}, options or {})
			
			local Toggle = {
				State = false
			}
			
			
			do
				Toggle["1f"] = Instance.new("Frame", Tab["19"]);
				Toggle["1f"]["BorderSizePixel"] = 0;
				Toggle["1f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				Toggle["1f"]["Size"] = UDim2.new(1, 0, 0.05, 0);
				Toggle["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				Toggle["1f"]["Name"] = [[ToggleOFF]];
				Toggle["1f"]["BackgroundTransparency"] = 0.9;
				
				Toggle["5555"] = Instance.new("TextButton", Toggle["1f"]);
				Toggle["5555"]["BackgroundTransparency"] = 1
				Toggle["5555"]["Size"] = UDim2.fromScale(1,1)
				Toggle["5555"]["TextTransparency"] = 1


				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.ToggleOFF.UICorner
				Toggle["20"] = Instance.new("UICorner", Toggle["1f"]);



				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.ToggleOFF.ToggleName
				Toggle["21"] = Instance.new("TextLabel", Toggle["1f"]);
				Toggle["21"]["TextWrapped"] = true;
				Toggle["21"]["BorderSizePixel"] = 0;
				Toggle["21"]["TextXAlignment"] = Enum.TextXAlignment.Left;
				Toggle["21"]["TextScaled"] = true;
				Toggle["21"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				Toggle["21"]["TextSize"] = 14;
				Toggle["21"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
				Toggle["21"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				Toggle["21"]["BackgroundTransparency"] = 1;
				Toggle["21"]["Size"] = UDim2.new(1, 0, 0.5, 0);
				Toggle["21"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				Toggle["21"]["Text"] = options.name;
				Toggle["21"]["Name"] = [[ToggleName]];
				Toggle["21"]["Position"] = UDim2.new(0, 0, 0.25, 0);


				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.ToggleOFF.ToggleName.UIPadding
				Toggle["22"] = Instance.new("UIPadding", Toggle["21"]);
				Toggle["22"]["PaddingLeft"] = UDim.new(0, 5);


				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.ToggleOFF.ToggleBar
				Toggle["23"] = Instance.new("Frame", Toggle["1f"]);
				Toggle["23"]["BorderSizePixel"] = 0;
				Toggle["23"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				Toggle["23"]["Size"] = UDim2.new(0.10281, 0, 0.39119, 0);
				Toggle["23"]["Position"] = UDim2.new(0.85713, 0, 0.28597, 0);
				Toggle["23"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				Toggle["23"]["Name"] = [[ToggleBar]];
				Toggle["23"]["BackgroundTransparency"] = 0.5;


				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.ToggleOFF.ToggleBar.UICorner
				Toggle["24"] = Instance.new("UICorner", Toggle["23"]);
				Toggle["24"]["CornerRadius"] = UDim.new(1, 0);


				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.ToggleOFF.ToggleBar.Intogglebar
				Toggle["25"] = Instance.new("Frame", Toggle["23"]);
				Toggle["25"]["BorderSizePixel"] = 0;
				Toggle["25"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				Toggle["25"]["Size"] = UDim2.new(0.42533, 0, 1, 0);
				Toggle["25"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				Toggle["25"]["Name"] = [[Intogglebar]];
				Toggle["25"]["BackgroundTransparency"] = 0.5;


				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.ToggleOFF.ToggleBar.Intogglebar.UICorner
				Toggle["26"] = Instance.new("UICorner", Toggle["25"]);
				Toggle["26"]["CornerRadius"] = UDim.new(1, 0);
			end
			
			do
				Toggle["1f"].MouseEnter:Connect(function()
					BakaLib:tween(Toggle["1f"],{BackgroundTransparency = 0.8},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
				end)

				Toggle["1f"].MouseLeave:Connect(function()
					BakaLib:tween(Toggle["1f"],{BackgroundTransparency = 0.9},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
				end)
				
				Toggle["5555"].MouseButton1Click:Connect(function()

						-- สลับค่า State ระหว่าง true และ false
						Toggle.State = not Toggle.State

						-- ถ้าเปิด (State = true) ให้ย้าย Intogglebar ไปขวา
						if Toggle.State then
							BakaLib:tween(Toggle["25"], {Position = UDim2.new(0.575, 0, 0, 0)}, TweenInfo.new(0.5, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out))
						else
							-- ถ้าปิด (State = false) ให้ย้าย Intogglebar กลับไปซ้าย
							BakaLib:tween(Toggle["25"], {Position = UDim2.new(0, 0, 0, 0)}, TweenInfo.new(0.5, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out))
						end

						-- เรียก callback function ถ้าต้องการให้ทำอะไรเพิ่มเติม
						options.callback(Toggle.State)
				end)

			end
			return Toggle
		end
		
		function Tab:AddSlide(options)
			-- ตรวจสอบและกำหนดค่า options ให้มี default, min, max
			options = BakaLib:validate({
				name = "Slide",
				default = 0,
				min = 0,
				max = 50,
				callback = function() end
			}, options or {})

			local Slide = {
				Value = options.default -- ค่าที่แสดงถึงตำแหน่งเริ่มต้นของ slide
			}

			-- ฟังก์ชันสำหรับอัปเดตตำแหน่งของ bar ตามค่า Slide
			local function updateBarPosition()
				local percent = (Slide.Value - options.min) / (options.max - options.min)
				Slide["2d"].Size = UDim2.new(percent, 0, 1, 0) -- ปรับขนาดของ bar ตามค่า percent
				
				
			end

			do
				Slide["27"] = Instance.new("Frame", Tab["19"])
				Slide["27"].BorderSizePixel = 0
				Slide["27"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Slide["27"].Size = UDim2.new(1, 0, 0.05, 0)
				Slide["27"].BorderColor3 = Color3.fromRGB(0, 0, 0)
				Slide["27"].Name = "Slide"
				Slide["27"].BackgroundTransparency = 0.9
				
				Slide["5555"] = Instance.new("TextButton", Slide["27"]);
				Slide["5555"]["BackgroundTransparency"] = 1
				Slide["5555"]["Size"] = UDim2.fromScale(1,1)
				Slide["5555"]["TextTransparency"] = 1

				-- UICorner
				Slide["28"] = Instance.new("UICorner", Slide["27"])

				-- Slide Name
				Slide["29"] = Instance.new("TextLabel", Slide["27"])
				Slide["29"].TextWrapped = true
				Slide["29"].BorderSizePixel = 0
				Slide["29"].TextXAlignment = Enum.TextXAlignment.Left
				Slide["29"].TextScaled = true
				Slide["29"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Slide["29"].TextSize = 14
				Slide["29"].FontFace = Font.new("rbxassetid://11702779517", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal)
				Slide["29"].TextColor3 = Color3.fromRGB(255, 255, 255)
				Slide["29"].BackgroundTransparency = 1
				Slide["29"].Size = UDim2.new(0.5, 0, 0.5, 0)
				Slide["29"].Text = options.name .. ": " .. tostring(math.floor(Slide.Value))
				Slide["29"].Position = UDim2.new(0, 0, 0.25, 0)

				-- Padding
				Slide["2a"] = Instance.new("UIPadding", Slide["29"])
				Slide["2a"].PaddingLeft = UDim.new(0, 5)

				-- Slider Bar
				Slide["2b"] = Instance.new("CanvasGroup", Slide["27"])
				Slide["2b"].BorderSizePixel = 0
				Slide["2b"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Slide["2b"].Size = UDim2.new(0.46143, 0, 0.39119, 0)
				Slide["2b"].Position = UDim2.new(0.51577, 0, 0.28597, 0)
				Slide["2b"].BorderColor3 = Color3.fromRGB(0, 0, 0)
				Slide["2b"].Name = "SliderBar"
				Slide["2b"].BackgroundTransparency = 0.5

				-- UICorner for SliderBar
				Slide["2c"] = Instance.new("UICorner", Slide["2b"])
				Slide["2c"].CornerRadius = UDim.new(1, 0)

				-- Bar (ตัวเลื่อน)
				Slide["2d"] = Instance.new("Frame", Slide["2b"])
				Slide["2d"].BorderSizePixel = 0
				Slide["2d"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Slide["2d"].Size = UDim2.new(0.56995, 0, 1.06667, 0)
				Slide["2d"].BorderColor3 = Color3.fromRGB(0, 0, 0)
				Slide["2d"].Name = "Bar"
				Slide["2d"].BackgroundTransparency = 0.5

				-- UICorner for Bar
				Slide["2e"] = Instance.new("UICorner", Slide["2d"])
				Slide["2e"].CornerRadius = UDim.new(1, 0)
			end

			-- กำหนดค่าเริ่มต้นให้กับ bar
			updateBarPosition()

			Slide["27"].MouseEnter:Connect(function()
				BakaLib:tween(Slide["27"],{BackgroundTransparency = 0.8},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
			end)

			Slide["27"].MouseLeave:Connect(function()
				BakaLib:tween(Slide["27"],{BackgroundTransparency = 0.9},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
			end)
			-- ฟังก์ชันที่จับการเลื่อนของเมาส์
			Slide["2b"].InputBegan:Connect(function(input,g)
				if g then return end
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					local connection
					connection = game:GetService("UserInputService").InputChanged:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseMovement then
							local mousePos = game:GetService("UserInputService"):GetMouseLocation().X
							local sliderPos = Slide["2b"].AbsolutePosition.X
							local sliderWidth = Slide["2b"].AbsoluteSize.X
							local newValue = math.clamp(((mousePos - sliderPos) / sliderWidth) * (options.max - options.min) + options.min, options.min, options.max)

							Slide.Value = newValue
							updateBarPosition()

							-- เรียก callback เมื่อมีการเปลี่ยนแปลงค่า
							options.callback(Slide.Value)
							Slide["29"].Text = options.name .. ": " .. tostring(math.floor(Slide.Value))
						end
					end)

					-- เมื่อผู้ใช้ปล่อยเมาส์ ให้ยกเลิกการเชื่อมต่อ
					Slide["2b"].InputEnded:Connect(function(endInput)
						if endInput.UserInputType == Enum.UserInputType.MouseButton1 then
							connection:Disconnect()
						end
					end)
				end
			end)

			return Slide
		end
		
		function Tab:AddDropdown(options)
			options = BakaLib:validate({
				name = "Dropdown",
				item = {},
				callback = function() end
			}, options or {})
			local Dropdown = {
				isOpen = false,
				currectValue = nil,
				Items = {
					["id"] = {
						"value"
					}
				}
			}
			
			do
				Dropdown["37"] = Instance.new("Frame", Tab["19"]);
				Dropdown["37"]["BorderSizePixel"] = 0;
				Dropdown["37"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				Dropdown["37"]["Size"] = UDim2.new(1, 0, 0.05, 0);
				Dropdown["37"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				Dropdown["37"]["Name"] = [[Dropdown]];
				Dropdown["37"]["BackgroundTransparency"] = 0.9;
				
				Dropdown["5555"] = Instance.new("TextButton", Dropdown["37"]);
				Dropdown["5555"]["BackgroundTransparency"] = 1
				Dropdown["5555"]["Size"] = UDim2.fromScale(1,1)
				Dropdown["5555"]["TextTransparency"] = 1
				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.Dropdown.UICorner
				Dropdown["38"] = Instance.new("UICorner", Dropdown["37"]);



				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.Dropdown.DropdownName
				Dropdown["39"] = Instance.new("TextLabel", Dropdown["37"]);
				Dropdown["39"]["TextWrapped"] = true;
				Dropdown["39"]["BorderSizePixel"] = 0;
				Dropdown["39"]["TextXAlignment"] = Enum.TextXAlignment.Left;
				Dropdown["39"]["TextScaled"] = true;
				Dropdown["39"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				Dropdown["39"]["TextSize"] = 14;
				Dropdown["39"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
				Dropdown["39"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				Dropdown["39"]["BackgroundTransparency"] = 1;
				Dropdown["39"]["Size"] = UDim2.new(0.5, 0, 0.5, 0);
				Dropdown["39"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				Dropdown["39"]["Text"] = options.name;
				Dropdown["39"]["Name"] = [[DropdownName]];
				Dropdown["39"]["Position"] = UDim2.new(0, 0, 0.25, 0);


				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.Dropdown.DropdownName.UIPadding
				Dropdown["3a"] = Instance.new("UIPadding", Dropdown["39"]);
				Dropdown["3a"]["PaddingLeft"] = UDim.new(0, 5);


				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.Dropdown.DropdownName.UITextSizeConstraint
				Dropdown["3b"] = Instance.new("UITextSizeConstraint", Dropdown["39"]);
				Dropdown["3b"]["MaxTextSize"] = 17;


				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.Dropdown.Selection
				Dropdown["3c"] = Instance.new("TextLabel", Dropdown["37"]);
				Dropdown["3c"]["TextWrapped"] = true;
				Dropdown["3c"]["BorderSizePixel"] = 0;
				Dropdown["3c"]["TextXAlignment"] = Enum.TextXAlignment.Right;
				Dropdown["3c"]["TextScaled"] = true;
				Dropdown["3c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				Dropdown["3c"]["TextSize"] = 14;
				Dropdown["3c"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
				Dropdown["3c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				Dropdown["3c"]["BackgroundTransparency"] = 1;
				Dropdown["3c"]["Size"] = UDim2.new(0.5, 0, 0.5, 0);
				Dropdown["3c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				Dropdown["3c"]["Text"] = "Select: Nothing";
				Dropdown["3c"]["Name"] = [[Selection]];
				Dropdown["3c"]["Position"] = UDim2.new(0.5, 0, 0.25, 0);


				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.Dropdown.Selection.UIPadding
				Dropdown["3d"] = Instance.new("UIPadding", Dropdown["3c"]);
				Dropdown["3d"]["PaddingRight"] = UDim.new(0, 5);


				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.Dropdown.Selection.UITextSizeConstraint
				Dropdown["3e"] = Instance.new("UITextSizeConstraint", Dropdown["3c"]);
				Dropdown["3e"]["MaxTextSize"] = 17;


				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.Dropdown.ItemHolder
				Dropdown["3f"] = Instance.new("Frame", Dropdown["37"]);
				Dropdown["3f"]["BorderSizePixel"] = 0;
				Dropdown["3f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				Dropdown["3f"]["Position"] = UDim2.new(0, 0, 1.38329, 0);
				Dropdown["3f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				Dropdown["3f"]["Name"] = [[ItemHolder]];
				Dropdown["3f"]["BackgroundTransparency"] = 1;
				Dropdown["3f"]["Visible"] = true


				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.Dropdown.ItemHolder.UICorner
				Dropdown["40"] = Instance.new("UICorner", Dropdown["3f"]);



				-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.Dropdown.ItemHolder.UIListLayout
				Dropdown["41"] = Instance.new("UIListLayout", Dropdown["3f"]);
				Dropdown["41"]["Padding"] = UDim.new(0, 5);
				Dropdown["41"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
			end
			
			do
				Dropdown["37"].MouseEnter:Connect(function()
					BakaLib:tween(Dropdown["37"],{BackgroundTransparency = 0.8},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
				end)

				Dropdown["37"].MouseLeave:Connect(function()
					BakaLib:tween(Dropdown["37"],{BackgroundTransparency = 0.9},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
				end)
				
				Dropdown["5555"].MouseButton1Click:Connect(function()
					
					Dropdown.isOpen = not Dropdown.isOpen
					
						BakaLib:tween(Dropdown["37"],{BackgroundTransparency = 0.5},TweenInfo.new(0.25,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out),function()
							BakaLib:tween(Dropdown["37"],{BackgroundTransparency = 0.9},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
						end)
						
						if Dropdown.isOpen then
							BakaLib:tween(Dropdown["3f"],{BackgroundTransparency = 0.85},TweenInfo.new(0.25,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
							BakaLib:tween(Dropdown["3f"],{Size = UDim2.new(1.04957, 0, 4.5117, 0)},TweenInfo.new(0.25,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
							
						else
							BakaLib:tween(Dropdown["3f"],{BackgroundTransparency = 1},TweenInfo.new(0.25,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
							BakaLib:tween(Dropdown["3f"],{Size = UDim2.new(0,0,0,0)},TweenInfo.new(0.25,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
						end
				end)
			end
			
			game:GetService("RunService").RenderStepped:Connect(function()
				if Dropdown.currectValue ~= nil then
					Dropdown["3c"]["Text"] = "Select: "..Dropdown.currectValue
				end
			end)
			
			do
				function Dropdown:Add(id,value)
					if Dropdown.Items[id] ~= nil then
						return
					end
					Dropdown.Items[id] = {
						Instance = {},
						value = value
					}
					
					Dropdown.Items[id].Instance = {}
					Dropdown.Items[id].value = value
					
					Dropdown.Items[id].Instance["42"] = Instance.new("TextLabel", Dropdown["3f"]);
					Dropdown.Items[id].Instance["42"]["TextWrapped"] = true;
					Dropdown.Items[id].Instance["42"]["BorderSizePixel"] = 0;
					Dropdown.Items[id].Instance["42"]["TextScaled"] = true;
					Dropdown.Items[id].Instance["42"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Dropdown.Items[id].Instance["42"]["TextSize"] = 14;
					Dropdown.Items[id].Instance["42"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
					Dropdown.Items[id].Instance["42"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
					Dropdown.Items[id].Instance["42"]["BackgroundTransparency"] = 0.9;
					Dropdown.Items[id].Instance["42"]["Size"] = UDim2.new(1, 0, 0.13873, 0);
					Dropdown.Items[id].Instance["42"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Dropdown.Items[id].Instance["42"]["Name"] = id;
					Dropdown.Items[id].Instance["42"]["Text"] = id;
					
					Dropdown.Items[id].Instance["5555"] = Instance.new("TextButton", Dropdown.Items[id].Instance["42"]);
					Dropdown.Items[id].Instance["5555"]["BackgroundTransparency"] = 1
					Dropdown.Items[id].Instance["5555"]["Size"] = UDim2.fromScale(1,1)
					Dropdown.Items[id].Instance["5555"]["TextTransparency"] = 1


					-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.Dropdown.ItemHolder.ItemNotSelect.UITextSizeConstraint
					Dropdown.Items[id].Instance["43"] = Instance.new("UITextSizeConstraint", Dropdown.Items[id].Instance["42"]);
					Dropdown.Items[id].Instance["43"]["MaxTextSize"] = 16;


					-- StarterGui.BakaLib.MainFrame.Hub.MainFunction.PageHolder.Dropdown.ItemHolder.ItemNotSelect.UICorner
					Dropdown.Items[id].Instance["44"] = Instance.new("UICorner", Dropdown.Items[id].Instance["42"]);
					
					do
						Dropdown.Items[id].Instance["42"].MouseEnter:Connect(function()
							BakaLib:tween(Dropdown.Items[id].Instance["42"],{BackgroundTransparency = 0.8},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
						end)

						Dropdown.Items[id].Instance["42"].MouseLeave:Connect(function()
							BakaLib:tween(Dropdown.Items[id].Instance["42"],{BackgroundTransparency = 0.9},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
						end)
						
						game:GetService("RunService").RenderStepped:Connect(function()
							if Dropdown.currectValue == value then
								BakaLib:tween(Dropdown.Items[id].Instance["42"],{BackgroundTransparency = 0.7},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
							else
								BakaLib:tween(Dropdown.Items[id].Instance["42"],{BackgroundTransparency = 0.9},TweenInfo.new(0.5,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
							end
						end)
						
						Dropdown.Items[id].Instance["5555"].MouseButton1Click:Connect(function()
								options.callback(value)
								Dropdown.currectValue = value
								BakaLib:tween(Dropdown["3f"],{BackgroundTransparency = 1},TweenInfo.new(0.25,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
								BakaLib:tween(Dropdown["3f"],{Size = UDim2.new(0,0,0,0)},TweenInfo.new(0.25,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out))
						end)
					end
				end
			
			end
			
			return Dropdown
		end

		

		return Tab
	end
	return GUI
end

return BakaLib
